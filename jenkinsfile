pipeline{
    agent any
    environment{
        VERSION = "${env.BUILD_ID}"
    }
    stages{
        stage("Sonar quality check"){
            agent {
                docker {
                    image 'openjdk:11'
                    }
                }
                steps{
                     script{
                        withSonarQubeEnv(credentialsId: 'sonar-token') {
                            sh 'chmod +x gradlew'
                            sh './gradlew sonarqube'
   
                        }
                        
                        timeout(time: 1, unit: 'HOURS') {
                            def qg = waitForQualityGate()
                            if (qg.status != 'OK') {
                                error "Pipeline aborted due to quality gate failure: ${qg.status}"
                            }

                        }
                
                
                    }
                }
            }
        }

        stage("Docker build and push to ECR"){
            steps{
                scripts{
                    sh '''
                    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 011006889812.dkr.ecr.us-east-1.amazonaws.com
                    docker build -t docker-repository:${VERSION} .
                    docker tag docker-repository:latest 011006889812.dkr.ecr.us-east-1.amazonaws.com/docker-repository:${VERSION}

                    '''
                }
            }
        }

    }
  
